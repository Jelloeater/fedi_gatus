version: '3'
vars:
    BUILD_DIR: fedi_gatus
tasks:
    default:
        - task: test
        - task: commit
    test:
        silent: false
        interactive: false
        cmds:
            - poetry install
            - task: pytest
    commit:
        # Run all actions at same time
        deps:
            -   task: format
            -   task: security
            -   task: docs

    setup:
        - sudo apt-get install python3.11
        - python3.11 -m pip install pipx
        - python3.11 -m pipx ensurepath
        - python3.11 -m pipx install poetry
        - poetry install
    clean:
        - rm -rf dist
        - poetry cache clear _default_cache --all  --no-interaction
        - poetry cache clear PyPI --all  --no-interaction
        - poetry check
        - py3clean .
    security:
        - poetry run whispers {{.BUILD_DIR}} # Check for security issues
        - poetry run bandit --silent -r {{.BUILD_DIR}}
        - python3.10 -m pip install tartufo # Only works on 3.10
        - python3.10 -m tartufo scan-local-repo .
    pytest:
        silent: false
        interactive: false
        dotenv: [prod.env]
        cmds:
            - poetry run vulture --min-confidence 100 {{.BUILD_DIR}}
            # TODO enabled after fixing false positive #- poetry run xenon --max-absolute B --max-modules B --max-average B {{.BUILD_DIR}}
#            - poetry run mypy --install-types --non-interactive
#            - poetry run mypy {{.BUILD_DIR}} # Little too aggressive
            - poetry run pytest --cov --cov-fail-under=75 #--typeguard-packages={{.BUILD_DIR}} # Leave typeguard off for now
    format:
        silent: false
        interactive: false
        cmds:
            - poetry run isort --atomic . # Sort imports
            - poetry run black . # Format code
            - poetry run flake8
            - poetry version $(git describe --tags --abbrev=0)
    docs:
        silent: false
        interactive: false
        cmds:
            - rm -rf docs
            - poetry run pdoc3 {{.BUILD_DIR}} -o docs -f
            - poetry run pyreverse {{.BUILD_DIR}} -d docs
            - git add docs
            - rm CHANGELOG.md
            - git-changelog -p -a -x >> CHANGELOG.md
            - git add CHANGELOG.md
    install:
      - pip install . --upgrade
    build:
      - poetry version $(git describe --tags --abbrev=0)
      - git-changelog -p -a -x >> CHANGELOG.md
      - git add CHANGELOG.md
      - docker-compose build --no-cache --pull --progress=plain
    run:
      - docker-compose build
      - docker-compose up -d monitoring_db
      - docker-compose up updater # Block for config setup
      - docker-compose up config
      - docker-compose up -d caddy
    publish:
        -   task: security
        -   task: build
        - poetry publish
    build_poetry:
        env:
            PIPENV_IGNORE_VIRTUALENVS: 1
        deps: [ docs, clean ]
        cmds:
            - poetry build
