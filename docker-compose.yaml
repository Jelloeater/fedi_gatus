version: '3.7'
volumes:
  caddy_data:
  caddy_config:
  gatus_config:
  gatus_data:
  monitoring_data:

services:
  #Monitor
  gatus:
    depends_on:
      - gatus_db
    image: twinproduction/gatus:latest
    volumes:
      - gatus_config:/config

  # Caddy Proxy
  caddy:
    depends_on:
      - api
      - gatus
    env_file: .env
    image: caddy:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
    - $PWD/Caddyfile:/etc/caddy/Caddyfile
    - caddy_data:/data
    - caddy_config:/config

  api:
    environment:
      - DOCKER=1
    depends_on:
      - monitoring_db
      - gatus_db
    env_file: .env
    image: fedi_api
    entrypoint: [ "python3", "fedi_gatus/api_server/__main__.py" ]

  config:
    depends_on:
      - monitoring_db
    env_file: .env
    environment:
      - DOCKER=1
      #- SQL_LITE=1
    image: fedi_api
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - gatus_config:/app/fedi_gatus/config_gen/config:rw
      #- monitoring_data:/data
    entrypoint: [ "python3", "fedi_gatus/config_gen" ]

  gatus_db:
    hostname: gatusdb
    image: postgres:15.4
    env_file: .env
    volumes:
      - gatus_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
#    ports:
#      - "127.0.0.1:5432:5432"

  monitoring_db:
    hostname: monitoringdb
    image: postgres:15.4
    env_file: .env
    volumes:
      - gatus_data:/var/lib/postgresql/data
#    ports:
#      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  updater:
    environment:
      - DOCKER=1
    depends_on:
      - monitoring_db
    env_file: .env
    image: fedi_api
    entrypoint: [ "python3", "fedi_gatus/updater" ]
